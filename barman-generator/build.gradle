apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/dokka"
    }

    afterEvaluate {
        publishing {
            publications {
                // Creates a Maven publication called "release".
                release(MavenPublication) {
                    // Applies the component for the release build variant.
                    from components.release

                    // You can then customize attributes of the publication as shown below.
                    groupId = 'com.cesarynga'
                    artifactId = 'barman-generator'
                    version = '1.0.0'
                    artifact(tasks.getByName("androidJavadocJar"))
                    artifact(tasks.getByName("androidSourcesJar"))
                    pom {
                        name.set("Barman Generator")
                        description.set("Android Barcode library based on ZXing written in Kotlin.")
                        url.set("https://github.com/CesarYnga/Barman")
                        licenses {
                            license {
                                name.set("The Apache License, Version 2.0")
                                url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                            }
                        }
                        developers {
                            developer {
                                id.set("CesarYnga")
                                name.set("Cesar Ynga")
                                email.set("csarynga@gmail.com")
                            }
                        }
                        scm {
                            connection.set("scm:git:git://github.com/CesarYnga/Barman.git")
                            developerConnection.set("scm:git:ssh://github.com/CesarYnga/Barman.git")
                            url.set("https://github.com/CesarYnga/Barman")
                        }
                    }
                }
            }
        }
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task androidJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from "$buildDir/javadoc"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.getByName("main").java.srcDirs
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7'
    implementation 'com.google.zxing:core:3.4.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.3.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}